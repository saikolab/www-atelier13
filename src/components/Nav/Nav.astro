---
import Button from "@components/Button/Button.astro";
import MobileNav from "@components/Nav/MobileNav/MobileNav.astro";
import NavDropdown from "@components/Nav/NavDropdown/NavDropdown.astro";
import NavLink from "@components/Nav/NavLink.astro";
import SiteLogo from "@components/SiteLogo/SiteLogo.astro";
import navData from "@config/navData.json";
import { localizedPath } from "@/i18n/utils";
import { LOCALES, type Locale } from "@/i18n/config";

interface Props {
  startStyle?: "default" | "white";
  lang: Locale;
  rest?: any;
}

const { startStyle = "default", lang, rest } = Astro.props as Props;

// Flag emoji and accessible names per locale
const FLAG: Record<Locale, string> = {
  en: "ðŸ‡¬ðŸ‡§",
  el: "ðŸ‡¬ðŸ‡·",
};
const LANG_NAME: Record<Locale, string> = {
  en: "English",
  el: "Î•Î»Î»Î·Î½Î¹ÎºÎ¬",
};
---

<div
  id="nav__container"
  class="initial fixed top-0 left-0 z-30 flex w-full flex-col py-2 transition-[padding,background-color] duration-300"
  transition:name={`nav`}
  {...rest}
>
  <div class="mx-auto flex w-full" class:list={[{ "text-base-900": startStyle === "default" }]}>
    <div class="site-container flex h-16 w-full items-center justify-between gap-4">
      <a href={localizedPath(lang, "/")} class="mr-2 flex items-center gap-2">
        <SiteLogo />
        <span class="sr-only">Home</span>
      </a>

      <nav id="nav__links" class="ml-auto hidden items-center gap-x-2 md:flex">
        <ul class="flex items-center gap-x-4">
          {
            navData.map((navItem) =>
              "dropdown" in navItem ? (
                <NavDropdown navItem={{
                  ...navItem,
                  dropdown: navItem.dropdown.map(d => ({ ...d, link: localizedPath(lang, d.link) }))
                }} class="text-base-900" />
              ) : (
                <NavLink navItem={{ ...navItem, link: localizedPath(lang, navItem.link) }} class="h-10" />
              ),
            )
          }
        </ul>
        <!-- Language Switcher -->
        <ul class="flex items-center gap-3 ml-4">
          {LOCALES.map((loc) => (
            <li>
              <a
                href={localizedPath(loc, Astro.url.pathname.replace(/^\/(en|el)(?=\/|$)/, "") || "/")}
                aria-current={loc === lang ? "page" : undefined}
                aria-label={LANG_NAME[loc]}
                title={LANG_NAME[loc]}
                class:list={["text-xl leading-none", { "opacity-60": loc !== lang }]}
              >
                <span aria-hidden="true">{FLAG[loc]}</span>
                <span class="sr-only">{LANG_NAME[loc]}</span>
              </a>
            </li>
          ))}
        </ul>
      </nav>

      <!-- mobile -->
      <div class="md:hidden flex items-center gap-2">
        <MobileNav />
      </div>
    </div>
  </div>
</div>

<script>
  let navbar: HTMLElement | null = null;
  let navCTA: HTMLElement | null = null;

  function scrollHandler() {
    const scrollY = window.scrollY;
    if (!navbar) return;
    if (scrollY > 5) {
      navbar.classList.add("scrolled");
      navbar.classList.remove("initial");
      navCTA?.setAttribute("data-scrolled", "true");
    } else {
      navbar.classList.add("initial");
      navbar.classList.remove("scrolled");
      navCTA?.setAttribute("data-scrolled", "false");
    }
  }

  function initNav() {
    navbar = document.getElementById("nav__container");
    navCTA = navbar?.querySelector(".nav__cta") as HTMLElement;
    window.addEventListener("scroll", scrollHandler, { passive: true });
  }

  if (document.readyState !== "loading") {
    initNav();
  } else {
    document.addEventListener("DOMContentLoaded", initNav, { passive: true } as any);
  }
</script>

<style>
  #nav__container.initial {
    color: white;
  }
  #nav__container.scrolled {
    background-color: var(--color-base-50);
    padding-block: 0;
  }
</style>
